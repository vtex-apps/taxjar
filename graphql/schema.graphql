type Query {
  listCustomers: [Customer]
  findProductCode(searchTerm: String): [Category]
  getListOfUsers(numItems: Int pageNumber:Int): UserList
}

type Mutation {
  createCustomer(customer: CustomerInput!): Boolean
  initConfiguration: String
  removeConfiguration: String
  deleteCustomer(customerId: String!): Boolean
}

input CustomerInput {
  customerId: String!
  exemptionType: String!
  name: String!
  exemptRegions: [ExemptRegionInput]
}

type Customer {
  customerId: String
  exemptionType: String
  name: String
  exemptRegions: [ExemptRegion]
}

type ExemptRegion {
  country: String
  state: String
}

input ExemptRegionInput {
  country: String
  state: String
}

type Category {
  description: String
  name: String
  productTaxCode: String
}

type UserList {
  items: [UserItem]
  paging: Paging
}

type UserItem {
  id: String
  email: String
  name: String
}

type Paging {
  page: Int
  perPage: Int
  total: Int
  pages: Int
}